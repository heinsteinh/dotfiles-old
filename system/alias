#!/usr/bin/env sh

#!/usr/bin/env sh
# ls -> lsd | swap ls for ls-deluxe
alias ls='lsd'
alias l='lsd -l'
alias la='lsd -a'
alias lla='lsd -la'
alias lt='lsd --tree'
alias lr='lsd -R'


alias du='duf'



if command -v duf &> /dev/null; then
    alias du='duf'
fi
alias dud='du -d 1 -h | sort -hr'
alias dul='du -hsx * | sort -rh | head -15'
alias duf='du -sh'

#alias lsd='lsd -l --icon never --group-dirs first'
alias lsd='lsd -l --group-dirs first'
alias ll='lsd -l --group-dirs first'
alias ls='lsd'
alias lsize='lsd --sizesort'
alias tree='lsd --tree'


alias ldot='lsd -ld .* --color=auto'
alias lart='lsd -1Fcart --color=auto'
alias lrt='lsd -1Fcrt --color=auto'

# Modern Unix https://github.com/ibraheemdev/modern-unix
if command -v lsd &> /dev/null; then
    alias ls='lsd -laF'
else
    alias ls='ls -la'
fi

if command -v duf &> /dev/null; then
    alias du='duf'
fi




alias c="clear"


alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation

alias cp="rsync --archive --human-readable --progress --verbose --whole-file"
alias scp="rsync --archive --checksum --compress --human-readable --itemize-changes --rsh=ssh --stats --verbose"
alias scpresume='rsync --partial --progress --rsh=ssh'


alias log='journalctl -f | ccze -A'  # follow log
alias log_realtime='journalctl -f -all |  ccze -A'
alias log0='journalctl -b -0 | ccze -A'  # current log
alias log1='journalctl -b -1 | ccze -A'  # previous log
alias log_bootmsg="echo -n Boot Messages | pv -qL 10 && sudo journalctl -b | ccze -A"  #boot messages
alias log_nginx='sudo tail -f /var/log/nginx/access.log /var/log/nginx/error.log | ccze'
alias log_jrnlctl_systemdmsg="sudo journalctl /usr/lib/systemd/systemd | ccze -A"
alias log_jrnlctl_cleansyslog="sudo journalctl --vacuum-time=2d"
alias log_sysctrl_blame="systemd-analyze blame | ccze -A"
alias log_sysctrl_units="echo -n Listing Units | pv -qL 10 && systemctl list-units | ccze -A"


# alias less='less -FSRXc'                   # Preferred 'less' implementation
 cd() { builtin cd "$@"; ll; }               # Always list directory contents upon 'cd'
 alias cd..='cd ../'                         # Go back 1 directory level (for fast typers)
 alias ..='cd ../'                           # Go back 1 directory level
 alias ...='cd ../../'                       # Go back 2 directory levels



# convenience aliases for editing configs
alias ev='vim ~/.vimrc'
alias et='vim ~/.tmux.conf'
alias ez='vim ~/.zshrc'
alias eb='vim ~/.bashrc'
alias ep='vim ~/.bash_profile'
alias ex='vim ~/.Xresources'
alias ei='vim ~/.config/i3/config'
alias eh='vim ~/.config/herbstluftwm/autostart'



export FZF_DEFAULT_COMMAND="(git ls-files --others --exclude-standard --cached 2> /dev/null || rg --files --no-ignore --hidden --follow --glob '!.git/*' --glob '!node_modules/*' 2>&1)"
export FZF_DEFAULT_OPTS='--multi --bind=ctrl-k:down,ctrl-l:up'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="$FZF_DEFAULT_OPTS"
export FZF_CTRL_R_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_R_OPTS="$FZF_DEFAULT_OPTS --preview 'echo {}' --preview-window down:3:hidden:wrap:noborder --bind '?:toggle-preview' --bind 'ctrl-y:execute-silent(echo -n {2..} | xsel --clipboard --input)+abort' --header 'Press CTRL-Y to copy command into clipboard' --border"
#export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
#export FZF_ALT_C_OPTS="$FZF_DEFAULT_OPTS"
command -v tree > /dev/null && export FZF_ALT_C_OPTS="$FZF_DEFAULT_OPTS --preview 'tree -C {} | head -$LINES' --preview-window 'noborder'"

# fd - cd to selected directory
fdir() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# fda - including hidden directories
fda() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
}



# Use fd (https://github.com/sharkdp/fd) instead of the default find
# for fzf '**' shell completions.
# - The first argument to the function ($1) is the base path to start traversal
_fzf_compgen_path() {
  command fd --hidden --follow --exclude .git --exclude node_modules . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  command fd --type d --hidden --follow --exclude .git --exclude node_modules . "$1"
}



# colorize man pages
# http://boredzo.org/blog/archives/2016-08-15/colorized-man-pages-understood-and-customized
export LESS_TERMCAP_mb=$(printf "\e[1;31m")
export LESS_TERMCAP_md=$(printf "\e[1;31m")
export LESS_TERMCAP_me=$(printf "\e[0m")
export LESS_TERMCAP_se=$(printf "\e[0m")
export LESS_TERMCAP_so=$(printf "\e[1;44;33m")
export LESS_TERMCAP_ue=$(printf "\e[0m")
export LESS_TERMCAP_us=$(printf "\e[1;32m")
export LESS='--quit-if-one-screen --ignore-case --status-column --LONG-PROMPT --RAW-CONTROL-CHARS --HILITE-UNREAD --tabs=4 --no-init --window=-4'

# like normal z when used with arguments but displays an fzf prompt when used without.
unalias z 2> /dev/null
z() {
    [ $# -gt 0 ] && _z "$*" && return
    cd "$(_z -l 2>&1 | fzf-tmux +s --tac --query "$*" | sed 's/^[0-9,.]* *//')"
}

# # Interactive process killing with FZF:
# fkill() {
#   pid=$(ps -ux | sed 1d | fzf -m | awk '{print $2}')

#   if [ "x$pid" != "x" ]
#   then
#     kill -${1:-9} $pid
#   fi
# }

alias cat="bat"
alias grep="rg"
alias find="fd"




export TRASH=$HOME/.local/share/Trash/files

# rm is stressful, use the desktop's trash bin
[ ! -d $TRASH ] && command mkdir -p $TRASH

alias rm='mv -f -t $TRASH'
alias rmtrash='rrm $TRASH/*'
alias rrm='command rm -rfv'

alias rml=list_trash

list_trash()
{
    echo -e "${TRASH} :\n"
    ls -l ${TRASH}
}



# Handling Mirrors {{{

  alias mirrorlist='vim /etc/pacman.d/mirrorlist'
  alias rft-5='sudo reflector --verbose -l 5 --sort rate --save /etc/pacman.d/mirrorlist'
  alias rft-200='sudo reflector --verbose -l 200 -p http --sort rate --save /etc/pacman.d/mirrorlist'

# }}}


# Alias' {{{
# aliases for Tmux
alias tmux='tmux -2'
alias ta='tmux attach -t'
alias tnew='tmux new -s'
alias tls='tmux ls'
alias tkill='tmux kill-session -t'

# vim
alias vi="vim"
alias vimt='vim $(date +"%Y-%m-%d")'
v() { (cd-git-root; vim "$(fzf --query="$(echo $@ | tr ' ' '\ ' )")"); }
alias vr="vim +:FZFMru"

alias tm='tmux'
alias tat='tmux new-session -As $(basename "$PWD" | tr . -)' # will attach if session exists, or create a new session
alias tmxsrc="tmux source-file ~/.tmux.conf"
alias tmxvsplit='tmux split-window -h && tmux selectp -t 1 && tmux split-window -v && tmux selectp -t 0'
alias tmxkillall="tmux ls | cut -d : -f 1 | xargs -I {} tmux kill-session -t {}" # tmux kill all sessions
alias tmxrename='tmux rename-window $(basename $(pwd))'
alias dotfiles="ls -a | grep '^\.' | grep --invert-match '\.DS_Store\|\.$'"
# }}}




# Pac-Man C o o o {{{

alias refr='refl; sudo rm -r /var/lib/pacman/db.lck; sudo pacman-key --init; sudo pacman-key --populate archlinux; sudo pacman-key --refresh-keys; sudo pacman-optimize' # Refresh all the things
alias refl='sudo reflector --verbose --country 'Germany' -l 200 -p http --sort age --fastest 3 --save /etc/pacman.d/mirrorlist; cat /etc'
# }}}


source "$DOTFILES_DIR"/system/.alias_applications
source "$DOTFILES_DIR"/system/.alias_systems
source "$DOTFILES_DIR"/system/.alias_pacman

echo "$DOTFILES_DIR"/system/.alias_applications
echo "$DOTFILES_DIR"/system/.alias_systems
echo "$DOTFILES_DIR"/system/.alias_gpg


