set nocompatible        " Use Vim settings, rather than Vi settings
set langmenu=en
set encoding=utf-8
"set nocompatible " Use Vim settings, rather than Vi settings
"set softtabstop=2 " Indent by 2 spaces when hitting tab
"set shiftwidth=4 " Indent by 4 spaces when auto-indenting
"set tabstop=4 " Show existing tab with 4 spaces width
"syntax on " Enable syntax highlighting
"filetype indent on " Enable indenting for files
"set autoindent " Enable auto indenting
set number " Enable line numbers
colorscheme desert " Set nice looking colorscheme
"set nobackup " Disable backup files
"set laststatus=2 "show status line
"set statusline=%F%m%r%h%w%=(%{&ff}/%Y)\ (line\ %l\/%L,\ col\ %c)\
"set wildmenu " Display command line's tab complete options as a menu.


" O S {{{
"====================================================================================================
let g:is_win   = has('win32') || has('win64')
let g:is_mac   = has('mac') || system('uname') =~? '^darwin'
let g:is_linux = !g:is_mac && has('unix')

let g:is_iterm = exists('$ITERM_PROFILE')
let g:is_tmux = exists('$TMUX')

if g:is_win
elseif g:is_mac
elseif g:is_linux
endif

if g:is_win
elseif g:is_linux
endif
" }}}

if g:is_win
    :let $VIMFILE_DIR = 'vimfiles'
else
    :let $VIMFILE_DIR = '.vim'
endif


"tmux
if g:is_iterm
    if g:is_tmux
        source $HOME/$VIMFILE_DIR/tmux.vim
    endif

   "echo "sourcing is_iterm "
   set t_Co=256  
endif


if g:is_win
    echo "Current Hostname :: " 
    echo hostname() 

    if hostname() == "BHI4PCH7D3"
        let &pythonthreehome='C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python37_64'
        let &pythonthreedll='C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python37_64\python37.dll'

    else

    end
elseif g:is_linux

endif





"{{{ Plugin Section

" Helps force plugins to load correctly when it is turned back on below
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'


source $HOME/$VIMFILE_DIR/settings/plugins.vim


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"}}}



" Highlighting {{{
" show errors
highlight Errors ctermbg=green guibg=darkred
" }}}


source $HOME/$VIMFILE_DIR/settings.vim


if has("gui_running")

    let $LANG='en'
    set langmenu=en
    set encoding=utf-8
    colorscheme gruvbox 

"set background=dark
"colorscheme slate
"colorscheme gruvbox
"colorscheme wombat256
"colorscheme herald
"colorscheme darkblue
"colorscheme oceanicNext

    " Always show cursor
    set ruler

    " Highlight the current line
    set cursorline


    " Hide the toolbar
    set guioptions-=T
    "set guioptions-=m  "remove menu bar
    "set guioptions-=T  "remove toolbar
    "set guioptions-=r  "remove right-hand,scroll bar
    "set guioptions-=L  "remove left-hand scroll bar

    if g:is_win
   set guifont=FiraCode_Nerd_Font_Mono:h11 
    elseif g:is_linux
   set guifont=Ubuntu\ Mono\ Regular\ 14
    endif

else
   echo "sourcing Terminal "
   set t_Co=256
   "colorscheme desert
   colorscheme gruvbox 
   set nocursorline
  

     if g:is_win
    
    
    elseif g:is_linux
    
    
    endif
endif


" {{{ Special setting for ConEmu
" http://conemu.github.io/en/VimXterm.html
if g:is_win && !has("gui_running")
  " 256-color
  set term=xterm
  set t_Co=256
  let &t_AB="\e[48;5;%dm"
  let &t_AF="\e[38;5;%dm"
  colorscheme desert
  "colorscheme zenburn

  " Enable mouse interaction
  set mouse=a
  inoremap <Esc>[62~ <C-X><C-E>
  inoremap <Esc>[63~ <C-X><C-Y>
  nnoremap <Esc>[62~ <C-E>
  nnoremap <Esc>[63~ <C-Y>
endif
"}}}



"{{{{

" source all the helper files
for f in split(glob('$HOME/$VIMFILE_DIR/functions/*.vim'), '\n')
    "echo "sourcing dir "
    echo f
    exec 'source' f
endfor


"" source all the helper files
"for f in split(glob('$HOME/$VIMFILE_DIR/plugins/*.vim'), '\n')
"    "echo "sourcing dir"
"    echo f
"    exec 'source' f
"endfor

" source all the helper files
"for f in split(glob('$$HOME/$VIMFILE_DIR/helpers/**/*.vim'), '\n')
"    exec 'source' f
"endfor
"



if g:is_win
  if filereadable(expand('$HOME/$VIMFILE_DIR/vimrc.win'))
    "echo "sourcing win dir
    source $HOME/$VIMFILE_DIR/vimrc.win
  endif
elseif g:is_mac
  if filereadable(expand("$HOME/$VIMFILE_DIR/vimrc.mac"))
    source  $HOME/$VIMFILE_DIR/vimrc.mac
  endif
elseif g:is_linux
  if filereadable(expand("$HOME/$VIMFILE_DIR/vimrc.linux"))
    source  $HOME/$VIMFILE_DIR/vimrc.linux
  endif
endif

"}}}}



