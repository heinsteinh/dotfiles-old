#user root; #www-data;
worker_processes  4; # 4 cores on RPi: grep processor /proc/cpuinfo | wc -l
#pid /run/nginx.pid;


events {
    worker_connections  768;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    ##
    #Basic Settings
    ##

    sendfile              on;
    tcp_nopush            on;
    tcp_nodelay           on;
    keepalive_timeout     10 10;
    client_header_timeout 10;
    client_body_timeout   10;
    send_timeout          10;
    types_hash_max_size   2048;
    server_tokens         off; # do not reveal nginx version to browsers/clients



    ##
    #Logging Settings
    ##
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;


    ##
    # Gzip Settings
    ##
    gzip              on;
    gzip_disable      "msie6";

    gzip_min_length   1000;
    gzip_vary         on;
    gzip_proxied      any;
    gzip_comp_level   6;
    gzip_buffers      16 8k;
    # gzip_http_version 1.1;
    gzip_types        text/plain text/css applciation/json application/x-javascript text/xml application/xml application/rss+xml text/javascript image/svg+xml application/x-font-ttf font/opentype application/vnd.ms-fontobject;

    include /etc/nginx/conf.d/*.conf;

   server {
       listen 80;
       listen [::]:80;
       server_name raspberry.vpn.mooo.com cloud.fkh.zanity.net cloud.fkh.mooo.com blog.fkh.mooo.com;

       return 301 https://$server_name$request_uri;
   }


   server{

      listen 443 ssl http2;
      listen [::]:443 ssl http2;
      server_name 192.168.2.103 cloud.fkh.zanity.net raspberry.vpn.mooo.com web.raspberryip.com repo.raspberryip.com;



       include ssl.conf;
       ssl_dhparam         /etc/nginx/ssl/dhparam.pem;
       ssl_certificate         /etc/letsencrypt/live/web.raspberryip.com/fullchain.pem;
       ssl_certificate_key     /etc/letsencrypt/live/web.raspberryip.com/privkey.pem;
       ssl_trusted_certificate /etc/letsencrypt/live/web.raspberryip.com/chain.pem;

      # ssl_certificate     /etc/nginx/ssl/server.crt;
      # ssl_certificate_key /etc/nginx/ssl/server.key;
       access_log off;



       include php.conf;

       #location / {
       #  deny all;
       #}


      location /.well-known/acme-challenge {
            root /var/lib/letsencrypt;
            default_type "text/plain";
            try_files $uri =404;
       }

       location /shellinabox/ {
          proxy_pass http://127.0.0.1:4200;

          access_log /var/log/nginx/shellinabox.access.log;
          error_log /var/log/nginx/shellinabox.error.log;

          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
          include proxy.conf;
          include log.func;

        }

        location @netd {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            rewrite ^/netdata(.*) /$1 break;
            proxy_pass http://127.0.0.1:19999;


           auth_basic            "Access Restricted";
           auth_basic_user_file  "/etc/nginx/.htpasswd";
           #include proxy.conf;
           include log.func;
          }


          location /netdata {
              auth_basic "Restricted";
              root /usr/share/netdata;
              auth_basic_user_file /etc/nginx/.htpasswd;

              index index.html;


              access_log /var/log/nginx/netdata.access.log;
              error_log /var/log/nginx/netdata.error.log;

              try_files $uri $uri/ @netd;
          }


      # location ~ /netdata/(?<behost>.*)/(?<ndpath>.*) {
      #       proxy_pass http://backend-$behost/$ndpath$is_args$args;
      #
      #      access_log /var/log/nginx/netdata.access.log;
      #      error_log /var/log/nginx/netdata.error.log;
      #
      #     auth_basic            "Access Restricted";
      #     auth_basic_user_file  "/etc/nginx/.htpasswd";
      #     include proxy.conf;
      #     include log.func;
      # }
      #
      ## make sure there is a trailing slash at the browser
      ## or the URLs will be wrong
      #location ~ /netdata/(?<behost>.*) {
      #    return 301 /netdata/$behost/;
      #}


     location /webmin {
          rewrite ^/webmin(?:/(.*))?$ / break;
          proxy_pass https://192.168.2.103:10000;

          access_log /var/log/nginx/webmin.access.log;
          error_log /var/log/nginx/webmin.error.log;

          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
          include proxy.conf;
          include log.func;
        }


       location /transmission {
          rewrite ^/transmission/$ /transmission;
          proxy_pass http://localhost:9091 ;

          access_log /var/log/nginx/transmission.access.log;
          error_log /var/log/nginx/transmission.error.log;

          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
          include proxy.conf;
          include log.func;
       }


       location /minidlna {
          rewrite ^/webmin(?:/(.*))?$ / break;
          proxy_pass http://192.168.2.103:8200 ;

          access_log /var/log/nginx/minidlna.access.log;
          error_log /var/log/nginx/minidlna.error.log;

          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
          include proxy.conf;
          include log.func;
       }



       location /ntop {
          rewrite ^/ntop/?(.*) /$1 break;

          proxy_pass http://192.168.2.103:3000;

          access_log /var/log/nginx/ntop.access.log;
          error_log /var/log/nginx/ntop.error.log;

          proxy_redirect off;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          #include proxy.conf;
          include log.func;

          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
        }


        location /btsync/ {
          rewrite ^/btsync/gui(.*) /btsync$1 last;
          proxy_pass http://localhost:8899/gui/;
          proxy_redirect /gui/ /btsync/;
          proxy_buffering off;

          access_log /var/log/nginx/btsync.access.log;
          error_log /var/log/nginx/btsync.error.log;

          include proxy.conf;
          include log.func;
          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
        }



        location /gui/ {
          proxy_pass http://localhost:8899/gui/;
          proxy_buffering off;

          access_log /var/log/nginx/btsync.access.log;
          error_log /var/log/nginx/btsync.error.log;

          include proxy.conf;
          include log.func;
          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
        }





       location /plex/ {
          #login : fkheinstein pass : App
          # Remove /plex from the URI.
          rewrite ^/plex(?:/(.*))?$ /web/$1 break;

          proxy_pass http://192.168.2.103:32400/ ;
          #proxy_pass http://localhost:32400/ ;

          access_log /var/log/nginx/plex.access.log;
          error_log /var/log/nginx/plex.error.log;

          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
          include proxy.conf;
          include log.func;
       }


       # Plex (it uses hard-coded redirection...)
       location /web/ {
         proxy_pass  http://localhost:32400/web/;
          access_log /var/log/nginx/plexweb.access.log;
          error_log /var/log/nginx/plexweb.error.log;

          auth_basic            "Access Restricted";
          auth_basic_user_file  "/etc/nginx/.htpasswd";
          include proxy.conf;
          include log.func;
       }





      location /private/seafile {
        fastcgi_pass    127.0.0.1:8000;
        fastcgi_param   SCRIPT_FILENAME     $document_root$fastcgi_script_name;
        fastcgi_param   PATH_INFO           $fastcgi_script_name;

        fastcgi_param   SERVER_PROTOCOL     $server_protocol;
        fastcgi_param   QUERY_STRING        $query_string;
        fastcgi_param   REQUEST_METHOD      $request_method;
        fastcgi_param   CONTENT_TYPE        $content_type;
        fastcgi_param   CONTENT_LENGTH      $content_length;
        fastcgi_param   SERVER_ADDR         $server_addr;
        fastcgi_param   SERVER_PORT         $server_port;
        fastcgi_param   SERVER_NAME         $server_name;
        fastcgi_param   HTTPS               on;
        fastcgi_param   HTTP_SCHEME         https;

        access_log      /var/log/nginx/seahub.access.log;
        error_log       /var/log/nginx/seahub.error.log;
      }

     location /seafhttp {
       rewrite ^/seafhttp(.*)$ $1 break;
       proxy_pass http://127.0.0.1:8082;
       client_max_body_size 0;
       proxy_connect_timeout  36000s;
       proxy_read_timeout  36000s;
       proxy_send_timeout  36000s;
     }


     location /media {
       root /home/seafile/seafileCloud/seafile-server-latest/seahub;
       access_log /var/log/nginx/seahub.media.access.log;
       error_log /var/log/nginx/seahub.media.error.log;
     }



       location /seafdav {

           fastcgi_pass    127.0.0.1:8282;
           fastcgi_param   SCRIPT_FILENAME     $document_root$fastcgi_script_name;
           fastcgi_param   PATH_INFO           $fastcgi_script_name;

           fastcgi_param   SERVER_PROTOCOL     $server_protocol;
           fastcgi_param   QUERY_STRING        $query_string;
           fastcgi_param   REQUEST_METHOD      $request_method;
           fastcgi_param   CONTENT_TYPE        $content_type;
           fastcgi_param   CONTENT_LENGTH      $content_length;
           fastcgi_param   SERVER_ADDR         $server_addr;
           fastcgi_param   SERVER_PORT         $server_port;
           fastcgi_param   SERVER_NAME         $server_name;

           fastcgi_param   HTTPS               on;

           client_max_body_size 0;
           proxy_connect_timeout 36000s;
           proxy_read_timeout 36000s;
           proxy_send_timeout 36000s;
           send_timeout 36000s;

           # This option is only available for Nginx >= 1.8.0. See more details below.
           proxy_request_buffering off;

           access_log      /var/log/nginx/seafdav.access.log;
           error_log       /var/log/nginx/seafdav.error.log;
      }


     #  location /nginx_status {
      location / {
          stub_status on;
          access_log off;
          include log.func;
       }
   }


    #include /etc/nginx/conf.d/*.conf;
    #include /etc/nginx/servers-enabled/*;

}
