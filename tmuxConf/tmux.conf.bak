# Our .tmux.conf file



# use unicode settings
#set -g utf8

# set correct terminal settings
set -g default-command /usr/bin/zsh
set -g default-shell /usr/bin/zsh

set-option -g renumber-windows on
# Set the terminal window title.
set-option -g set-titles on
#set-option -g set-titles-string "session:#{session_name} - window:#W - host:#{host}"
#set-option -g set-titles-string "#{session_name}@#{host}: -#W"
set-option -g set-titles-string "(TMUX $USER"'  #{session_name}@#H #I.#P) / #T'
#set-option -g set-titles-string "#S:#I:#W - "#T""

# Setting the prefix from C-b to C-a
# START:prefix
set -g prefix C-a
# END:prefix
# Free the original Ctrl-b prefix keybinding
# START:unbind
unbind C-b
# END:unbind
#setting the delay between prefix and command
# START:delay
set -s escape-time 1
# END:delay
# Ensure that we can send Ctrl-A to other apps
# START:bind_prefix
bind C-a send-prefix
# END:bind_prefix

# Set the base index for windows to 1 instead of 0
# START:index
set -g base-index 1
# END:index

# Set the base index for panes to 1 instead of 0
# START:panes_index
setw -g pane-base-index 1
# END:panes_index


# Prevent tmux from renaming the tab when processes change
set-option -g allow-rename off

# Reload the file with Prefix r
# START:reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# END:reload

# reload config
#bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# edit config
bind-key e new-window -n 'conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'
bind-key '/' new-window 'man tmux'

# clear screen and scrollback history
bind-key -n C-l send-keys C-l \; run 'tmux clear-history'


# splitting panes
# START:panesplit
#bind | split-window -h
#bind - split-window -v
# END:panesplit

# Make splitting windows easier
bind-key | split-window -h
bind-key - split-window -v


bind-key Up select-pane -U
bind-key Down select-pane -D
bind-key Left select-pane -L
bind-key Right select-pane -R

# moving between panes
# START:paneselect
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# END:paneselect

# Quick pane selection
# START:panetoggle
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# END:panetoggle

# Pane resizing
# START:paneresize
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# END:paneresize


# mouse support - set to on if you want to use the mouse
# START:mouse
#setw -g mode-mouse off
# END:mouse


# Set the default terminal mode to 256color mode
# START:termcolor
set -g default-terminal "screen-256color"
# END:termcolor

# enable activity alerts
#START:activity
setw -g monitor-activity on
set -g visual-activity on
#END:activity

# set the status line's colors
# START:statuscolor
set -g status-fg white
set -g status-bg black
# END:statuscolor

# set the color of the window list
# START:windowstatuscolor
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# END:windowstatuscolor

# set colors for the active window
# START:activewindowstatuscolor
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright


set-window-option -g automatic-rename off
#set-window-option -g utf8 on

# END:activewindowstatuscolor

# pane colors
# START:panecolors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow
# END:panecolor

# Command / message line
# START:cmdlinecolors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
# END:cmdlinecolors

# Status line left side
# START:statusleft
#set -g status-left-length 40
#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# END:statusleft

#START:utf8
#set -g status-utf8 on
#END:utf8å

# Status line right side
# 15% | 28 Nov 18:15
# START: statusright
# set -g status-right "#[fg=cyan]%d %b %R"
# END:statusright

# Update the status bar every sixty seconds
# START:updateinterval
#set -g status-interval 60
# END:updateinterval

# Center the window list
# START:centerwindowlist
#set -g status-justify centre
# END:centerwindowlist

# enable vi keys.
# START:vikeys
setw -g mode-keys vi
# END:vikeys




###############################
### Color & Style Settings ###
##############################
source ~/.tmux/layoutbind.sh
#source ~/.tmux/theme.sh
#source ~/.tmux/human.sh

set -g status-interval 1 #10 seconds
## load status config
if-shell "test -f ~/.tmux/tmux_theme_block.tmux" "source ~/.tmux/tmux_theme_block.tmux"
#if-shell "test -f ~/.tmux/tmux_theme_block.tmux" "source ~/.tmux/tmux_theme_powerline.tmux"





# clock
setw -g clock-mode-colour yellow
# --- end colors



unbind [

# vim keys in copy or choice mode
set-window-option -g mode-keys vi

# # copying selection vim style
# # http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# # https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
# bind-key Escape copy-mode                   # enter copy mode; default [
# bind-key -t vi-copy Escape cancel           # exit copy mode; or hit q
# bind-key p paste-buffer                     # paste; default ]
# bind-key -t vi-copy v begin-selection       # begin visual mode
# bind-key -t vi-copy V select-line           # visual line
# bind-key -t vi-copy y copy-selection        # yank
# bind-key -t vi-copy r rectangle-toggle      # visual block toggl


# # Give me my hj keys back for scrolling (bépo)
# bind-key -t vi-copy t cursor-down
# bind-key -t vi-copy s cursor-up
# bind-key -t vi-copy c cursor-left
# bind-key -t vi-copy r cursor-right
# bind-key -t vi-copy C-t page-down
# bind-key -t vi-copy C-s page-up


# read and write and delete paste buffer ( xsel method)
# https://wiki.archlinux.org/index.php/Tmux#ICCCM_Selection_Integration
# ctrl+shift+v
bind-key < command-prompt -p "send to tmux:" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
bind-key > command-prompt -p "send to xsel:" "run-shell 'tmux show-buffer | xsel -i -b'"
bind-key + command-prompt "delete-buffer"


##CLIPBOARD selection integration
###Requires prefix key before the command key
##Copy tmux paste buffer to CLIPBOARD
#bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
##Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
#bind C-v run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xsel -i -b"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @resurrect-processes ':all:'



# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
